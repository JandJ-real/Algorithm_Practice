//动态规划解法
#include <iostream>
#include <vector>

unsigned long long catalan(unsigned int n) {
    if (n <= 1) return 1;
    
    std::vector<unsigned long long> dp(n + 1, 0);
    dp[0] = dp[1] = 1;
    
    for (unsigned int i = 2; i <= n; ++i) {
        for (unsigned int j = 0; j < i; ++j) {
            dp[i] += dp[j] * dp[i - 1 - j];
        }
    }
    
    return dp[n];
}

int main() {
    unsigned int n;
    std::cout << "Enter n: ";
    std::cin >> n;
    std::cout << "Catalan(" << n << ") = " << catalan(n) << std::endl;
    return 0;
}

//公式：(1/(n+1))*(2n里面选n个);